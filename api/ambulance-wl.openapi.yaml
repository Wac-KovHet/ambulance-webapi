openapi: 3.0.0
servers:
  - description: Cluster Endpoint
    url: /api
info:
  description: Ambulance management for Web-In-Cloud system
  version: '1.0.0'
  title: Ambulance Api
  contact:
    email: xkovhet@stuba.sk
  license:
    name: CC BY 4.0
    url: 'https://creativecommons.org/licenses/by/4.0/'
tags:
  - name: ambulanceList
    description: Ambulance API
  - name: employeeList
    description: Employee API
paths:
  '/ambulances':
    get:
      tags:
        - ambulanceList
      summary: Provides the ambulance list
      operationId: getAmbulanceList
      description: Get list of ambulances
      responses:
        '200':
          description: List of ambulances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AmbulanceResponse'
              examples:
                response:
                  $ref: '#/components/examples/AmbulanceResponseListExample'
    post:
      tags:
        - ambulanceList
      summary: Saves new ambulance
      operationId: createAmbulance
      description: Use this method to store new ambulance.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmbulanceRequest'
            examples:
              request-sample:
                $ref: '#/components/examples/AmbulanceRequestExample'
        description: Ambulance request to store
        required: true
      responses:
        '200':
          description: Value of the ambulance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbulanceResponse'
              examples:
                updated-response:
                  $ref: '#/components/examples/AmbulanceResponseExample'
        '400':
          description: Missing mandatory properties of input object.
  '/ambulances/{ambulanceId}':
    get:
      tags:
        - ambulanceList
      summary: Provides details about the ambulance
      operationId: getAmbulance
      description: By using ambulanceId you can details of particular ambulance.
      parameters:
        - in: path
          name: ambulanceId
          description: pass the id of the particular ambulance
          required: true
          schema:
            type: string
      responses:
        '200':
          description: value of the ambulance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbulanceResponse'
              examples:
                response:
                  $ref: '#/components/examples/AmbulanceResponseExample'
        '404':
          description: Ambulance with such ID does not exists
    put:
      tags:
        - ambulanceList
      summary: Updates specific ambulance
      operationId: updateAmbulance
      description: Use this method to update content of the ambulance.
      parameters:
        - in: path
          name: ambulanceId
          description: pass the id of the particular ambulance
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmbulanceRequest'
            examples:
              request:
                $ref: '#/components/examples/AmbulanceRequestExample'
        description: Ambulance request to update
        required: true
      responses:
        '200':
          description: Value of the ambulance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmbulanceResponse'
              examples:
                response:
                  $ref: '#/components/examples/AmbulanceResponseExample'
        '404':
          description: Ambulance with such ID does not exists
    delete:
      tags:
        - ambulanceList
      summary: Deletes specific ambulance
      operationId: deleteAmbulance
      description: Use this method to delete the specific ambulance.
      parameters:
        - in: path
          name: ambulanceId
          description: pass the id of the particular ambulance
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Item deleted
        '404':
          description: Ambulance with such ID does not exists
  '/ambulances/{ambulanceId}/employees':
    get:
      tags:
        - emloyeeList
      summary: Provides details the ambulance employee list
      operationId: getEmployeeList
      description: By using ambulanceId you can get employee list.
      parameters:
        - in: path
          name: ambulanceId
          description: pass the id of the particular ambulance
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeResponse'
              examples:
                response:
                  $ref: '#/components/examples/EmployeeResponseListExample'
        '404':
          description: Ambulance with such ID does not exists
    post:
      tags:
        - employeeList
      summary: Saves new employee
      operationId: createEmployee
      description: Use this method to store new employee.
      parameters:
        - in: path
          name: ambulanceId
          description: pass the id of the particular ambulance
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
            examples:
              request-sample:
                $ref: '#/components/examples/EmployeeRequestExample'
        description: Employee request to store
        required: true
      responses:
        '200':
          description: Value of the employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
              examples:
                updated-response:
                  $ref: '#/components/examples/EmployeeResponseExample'
        '400':
          description: Missing mandatory properties of input object.
        '404':
          description: Ambulance with such ID does not exists
  '/ambulances/{ambulanceId}/employees/{employeeId}':
    get:
      tags:
        - emloyeeList
      summary: Provides details about the employee
      operationId: getEmployee
      description: By using ambulanceId and employeeId you can details of particular employee.
      parameters:
        - in: path
          name: ambulanceId
          description: pass the id of the particular ambulance
          required: true
          schema:
            type: string
        - in: path
          name: employeeId
          description: pass the id of the particular employee
          required: true
          schema:
            type: string
      responses:
        '200':
          description: value of the employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
              examples:
                response:
                  $ref: '#/components/examples/EmployeeResponseExample'
        '403':
          description: Value of the ambulanceId and employeeId is mismatching.
        '404':
          description: Ambulance or Employee with such ID does not exists
    put:
      tags:
        - emloyeeList
      summary: Updates specific employee
      operationId: updateEmployee
      description: Use this method to update employee.
      parameters:
        - in: path
          name: ambulanceId
          description: pass the id of the particular ambulance
          required: true
          schema:
            type: string
        - in: path
          name: employeeId
          description: pass the id of the particular employee
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
            examples:
              request:
                $ref: '#/components/examples/EmployeeRequestExample'
        description: Employee request to update
        required: true
      responses:
        '200':
          description: Value of the employee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
              examples:
                response:
                  $ref: '#/components/examples/EmployeeResponseExample'
        '403':
          description: Value of the ambulanceId and employeeId is mismatching.
        '404':
          description: Ambulance or Employee with such ID does not exists
    delete:
      tags:
        - emloyeeList
      summary: Deletes specific employee
      operationId: deleteEmployee
      description: Use this method to delete the specific employee.
      parameters:
        - in: path
          name: ambulanceId
          description: pass the id of the particular ambulance
          required: true
          schema:
            type: string
        - in: path
          name: employeeId
          description: pass the id of the particular employee
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Item deleted
        '403':
          description: Value of the ambulanceId and employeeId is mismatching.
        '404':
          description: Ambulance or Employee with such ID does not exists
components:
  schemas:
    AmbulanceRequest:
      type: object
      required: [name, location, contact]
      properties:
        name:
          type: string
          example: Cardiology Ambulance
          description: Name of ambulance
        location:
          type: string
          example: A 1.34
          description: Location of ambulance
        contact:
          type: string
          example: cardiology@gmail.com
          description: Contact for ambulance
      example:
        $ref: '#/components/examples/AmbulanceRequestExample'
    AmbulanceResponse:
      type: object
      required: [id, name, location, contact, nurseCount, doctorCount]
      properties:
        id:
          type: string
          example: x321ab3
          description: Unique id of the ambulance
        name:
          type: string
          example: Cardiology Ambulance
          description: Name of ambulance
        location:
          type: string
          example: A 1.34
          description: Location of ambulance
        contact:
          type: string
          example: cardiology@gmail.com
          description: Contact for ambulance
        nurseCount:
          type: string
          example: 10
          description: Number of nurses
        doctorCount:
          type: string
          example: 5
          description: Number of doctors
      example:
        $ref: '#/components/examples/AmbulanceResponseExample'
    EmployeeRequest:
      type: object
      required: [name, surname, dateOfBirth, position, wage]
      properties:
        name:
          type: string
          example: Bill
          description: Name of employee
        surname:
          type: string
          example: Gates
          description: Surname of employee
        dateOfBirth:
          type: string
          format: date
          example: '2000-01-01'
          description: Date of birth of employee
        position:
          type: string
          example: Doctor
          description: Position of employee
      example:
        $ref: '#/components/examples/EmployeeRequestExample'
    EmployeeResponse:
      type: object
      required: [id, name, surname, dateOfBirth, position, wage]
      properties:
        id:
          type: string
          example: x321ab3
          description: Unique id of the employee
        name:
          type: string
          example: Bill
          description: Name of employee
        surname:
          type: string
          example: Gates
          description: Surname of employee
        dateOfBirth:
          type: string
          format: date
          example: '2000-01-01'
          description: Date of birth of employee
        position:
          type: string
          example: Doctor
          description: Position of employee
      example:
        $ref: '#/components/examples/EmployeeResponseExample'
  examples:
    AmbulanceRequestExample:
      summary: Cardiology Ambulance
      description: Ambulance request object
      value:
        name: Cardiology Ambulance
        location: A 1.34
        contact: cardiology@gmail.com
    AmbulanceResponseExample:
      summary: Cardiology Ambulance
      description: Ambulance response object
      value:
        id: x321ab3
        name: Cardiology Ambulance
        location: A 1.34
        contact: cardiology@gmail.com
        nurseCount: 10
        doctorCount: 5
    AmbulanceResponseListExample:
      summary: List of ambulances
      description: Example ambulance list containing 2 ambulances
      value:
        - id: x321ab3
          name: Cardiology Ambulance
          location: A 1.34
          contact: cardiology@gmail.com
          nurseCount: 10
          doctorCount: 5
        - id: x321ab4
          name: Chirurgical Ambulance
          location: B 3.12
          contact: chirurgy@gmail.com
          nurseCount: 5
          doctorCount: 2
    EmployeeRequestExample:
      summary: Bill Gates employee
      description: Employee request object
      value:
        name: Bill
        surname: Gates
        dateOfBirth: '2000-01-01'
        position: Doctor
        wage: 100
    EmployeeResponseExample:
      summary: Bill Gates employee
      description: Employee response object
      value:
        id: x321ab3
        name: Bill
        surname: Gates
        dateOfBirth: '2000-01-01'
        position: Doctor
        wage: 100
    EmployeeResponseListExample:
      summary: List of employees
      description: Example employee list containing 2 employees
      value:
        - id: x321ab3
          name: Bill
          surname: Gates
          dateOfBirth: '2000-01-01'
          position: Doctor
          wage: 100
        - id: x321dsads
          name: Donald
          surname: Trump
          dateOfBirth: '2000-01-01'
          position: Nurse
          wage: 1000

